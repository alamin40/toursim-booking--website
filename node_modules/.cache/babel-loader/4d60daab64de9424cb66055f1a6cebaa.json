{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport InitializeAuthentication from \"../components/firebase/firebase.init\";\nInitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n\n  const signInUsingGoogle = () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    return signInWithPopup(auth, googleProvider) // .then(result => {\n    //     setUser(result.user);\n    // })\n    .finally(() => setIsLoading(false));\n  }; // observed user state change\n\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, []);\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {}).finally(() => setIsLoading(false));\n  };\n\n  return {\n    user,\n    isLoading,\n    signInUsingGoogle,\n    logOut\n  };\n};\n\n_s(useFirebase, \"WMYs9Ez/XJQvr3tvDvIPBVPelGA=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["C:/projects/toursim-booking-website/src/hook/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","useEffect","useState","InitializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","signInUsingGoogle","googleProvider","finally","unsubscribed","logOut","then"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,OAAvD,EAAgEC,kBAAhE,QAA0F,eAA1F;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AAGAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMO,IAAI,GAAGb,OAAO,EAApB;;AAEA,QAAMc,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,cAAc,GAAG,IAAIb,kBAAJ,EAAvB;AACA,WAAOD,eAAe,CAACY,IAAD,EAAOE,cAAP,CAAf,CACH;AACA;AACA;AAHG,KAIFC,OAJE,CAIM,MAAMJ,YAAY,CAAC,KAAD,CAJxB,CAAP;AAKH,GARD,CANsB,CAgBtB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,YAAY,GAAGb,kBAAkB,CAACS,IAAD,EAAQJ,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARsC,CAAvC;AASA,WAAO,MAAMK,YAAb;AACH,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,MAAM,GAAG,MAAM;AACjBN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,OAAO,CAACU,IAAD,CAAP,CACKM,IADL,CACU,MAAM,CAAG,CADnB,EAEKH,OAFL,CAEa,MAAMJ,YAAY,CAAC,KAAD,CAF/B;AAGH,GALD;;AAMA,SAAO;AACHH,IAAAA,IADG;AAEHE,IAAAA,SAFG;AAGHG,IAAAA,iBAHG;AAIHI,IAAAA;AAJG,GAAP;AAMH,CA1CD;;GAAMV,W;;AA4CN,eAAeA,WAAf","sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport InitializeAuthentication from \"../components/firebase/firebase.init\";\r\n\r\n\r\nInitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const auth = getAuth();\r\n\r\n    const signInUsingGoogle = () => {\r\n        setIsLoading(true);\r\n        const googleProvider = new GoogleAuthProvider();\r\n        return signInWithPopup(auth, googleProvider)\r\n            // .then(result => {\r\n            //     setUser(result.user);\r\n            // })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    // observed user state change\r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user);\r\n            }\r\n            else {\r\n                setUser({});\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n        return () => unsubscribed;\r\n    }, [])\r\n\r\n    const logOut = () => {\r\n        setIsLoading(true);\r\n        signOut(auth)\r\n            .then(() => { })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n    return {\r\n        user,\r\n        isLoading,\r\n        signInUsingGoogle,\r\n        logOut\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}