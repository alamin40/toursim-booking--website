{"ast":null,"code":"import _slicedToArray from\"C:/projects/toursim-booking-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{getAuth,signInWithPopup,GoogleAuthProvider,signOut,onAuthStateChanged}from\"firebase/auth\";import{useEffect}from\"react\";import{useState}from\"react\";import InitializeAuthentication from\"../components/firebase/firebase.init\";InitializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var auth=getAuth();var signInUsingGoogle=function signInUsingGoogle(){setIsLoading(true);var googleProvider=new GoogleAuthProvider();signInWithPopup(auth,googleProvider).then(function(result){setUser(result.user);}).finally(function(){return setIsLoading(false);});};// observed user state change\nuseEffect(function(){var unsubscribed=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});return function(){return unsubscribed;};},[]);var logOut=function logOut(){setIsLoading(true);signOut(auth).then(function(){}).finally(function(){return setIsLoading(false);});};return{user:user,isLoading:isLoading,signInUsingGoogle:signInUsingGoogle,logOut:logOut};};export default useFirebase;","map":{"version":3,"sources":["C:/projects/toursim-booking-website/src/hook/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","useEffect","useState","InitializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","signInUsingGoogle","googleProvider","then","result","finally","unsubscribed","logOut"],"mappings":"0JAAA,OAASA,OAAT,CAAkBC,eAAlB,CAAmCC,kBAAnC,CAAuDC,OAAvD,CAAgEC,kBAAhE,KAA0F,eAA1F,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,sCAArC,CAGAA,wBAAwB,GAExB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,cAAwBF,QAAQ,EAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAAkCJ,QAAQ,CAAC,IAAD,CAA1C,yCAAOK,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,IAAI,CAAGb,OAAO,EAApB,CAEA,GAAMc,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BF,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMG,CAAAA,cAAc,CAAG,GAAIb,CAAAA,kBAAJ,EAAvB,CACAD,eAAe,CAACY,IAAD,CAAOE,cAAP,CAAf,CACKC,IADL,CACU,SAAAC,MAAM,CAAI,CACZP,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP,CACH,CAHL,EAIKS,OAJL,CAIa,iBAAMN,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAJb,EAKH,CARD,CAUA;AACAP,SAAS,CAAC,UAAM,CACZ,GAAMc,CAAAA,YAAY,CAAGf,kBAAkB,CAACS,IAAD,CAAO,SAACJ,IAAD,CAAU,CACpD,GAAIA,IAAJ,CAAU,CACNC,OAAO,CAACD,IAAD,CAAP,CACH,CAFD,IAGK,CACDC,OAAO,CAAC,EAAD,CAAP,CACH,CACDE,YAAY,CAAC,KAAD,CAAZ,CACH,CARsC,CAAvC,CASA,MAAO,kBAAMO,CAAAA,YAAN,EAAP,CACH,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBR,YAAY,CAAC,IAAD,CAAZ,CACAT,OAAO,CAACU,IAAD,CAAP,CACKG,IADL,CACU,UAAM,CAAG,CADnB,EAEKE,OAFL,CAEa,iBAAMN,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFb,EAGH,CALD,CAMA,MAAO,CACHH,IAAI,CAAJA,IADG,CAEHE,SAAS,CAATA,SAFG,CAGHG,iBAAiB,CAAjBA,iBAHG,CAIHM,MAAM,CAANA,MAJG,CAAP,CAMH,CA1CD,CA4CA,cAAeZ,CAAAA,WAAf","sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport InitializeAuthentication from \"../components/firebase/firebase.init\";\r\n\r\n\r\nInitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const auth = getAuth();\r\n\r\n    const signInUsingGoogle = () => {\r\n        setIsLoading(true);\r\n        const googleProvider = new GoogleAuthProvider();\r\n        signInWithPopup(auth, googleProvider)\r\n            .then(result => {\r\n                setUser(result.user);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    // observed user state change\r\n    useEffect(() => {\r\n        const unsubscribed = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser(user);\r\n            }\r\n            else {\r\n                setUser({});\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n        return () => unsubscribed;\r\n    }, [])\r\n\r\n    const logOut = () => {\r\n        setIsLoading(true);\r\n        signOut(auth)\r\n            .then(() => { })\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n    return {\r\n        user,\r\n        isLoading,\r\n        signInUsingGoogle,\r\n        logOut\r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}